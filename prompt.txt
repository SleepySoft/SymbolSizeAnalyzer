你是一个精通C/C++且精通数据分析的python程序员，你写的代码优雅且高效，并带有标准的英文注释。接下来你需要实现下面描述的功能：

从nm命令导出的符号信息中解析出来的dataframe包含以下列：
```
data.append({
    'Filename': current_file,
    'Address': f"0x{address:08x}",
    'Size': size,
    'Type': sym_type,
    'Symbol': symbol
})
```
写一个函数symbol_diff，输入df_current（as left）和df_base（as right），将两个df on 'Symbol' 列outer join一起。对于df_base，仅保留Size。
对于join的结果，增加一列统计diff，该列显示'Size'列的差值（right - left），如果某个符号在一边不存在，则size为0，不影响计算差值。




写一个class SymbolDiffView(QWidget)，接受一个上面diff计算结果的df，以表格方式呈现其内容。
表格风格为：按行选择，自动调整表头宽度，点击表头排序






我有一个dataframe：self.top_data，里面有"offset"和"size"字段，里面的数据offset从小到大排列，且布局上无空洞。
我希望根据传入的_offset和_size参数返回连续匹配行的dataframe，方法如下：

start_offset = _offset
end_offset = _offset + _size
将dataframe的offset列+size列与相加，得到offset_until列
返回[offset, offset_until]和[start_offset, end_offset]重叠的行组成的dataframe
对于返回的行，找到最小的offset和offset_until，与[start_offset, end_offset]比较，可以得知是否越界（越上界/下界/部分越界/访问的整个区域越界）。
所有文本和注释都要使用英文。






